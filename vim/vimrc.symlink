set nocompatible               " be iMproved
filetype off                   " required!

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle
" required! 
Plugin 'gmarik/Vundle.vim'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-fugitive'
Plugin 'Lokaltog/vim-powerline'
Plugin 'scrooloose/syntastic.git'
Plugin 'kien/ctrlp.vim'
Plugin 'troydm/zoomwintab.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'davidhalter/jedi-vim'
Plugin 'altercation/vim-colors-solarized'
Plugin 'vim-scripts/taglist.vim'
Plugin 'yegappan/grep'
call vundle#end()

filetype plugin indent on     " required!

" Turn on omni completion
" http://vim.wikia.com/wiki/Omni_completion
filetype plugin on
set omnifunc=syntaxcomplete#Complete
"
" ctrlp
set runtimepath^=~/.vim/bundle/ctrlp.vim

set laststatus=2
set encoding=utf-8

" Search-specific
" ignore case
set ignorecase
set smartcase
" Hightlight matches
set hlsearch

set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set autoindent
set smartindent
" Do not put hash on first column
inoremap # X<BS>#
syntax on

" Highlight whitespaces and tabs
set list
set listchars=tab:â–¸.,trail:Â·,extends:#,nbsp:.

" Theme settings
set background=dark
colorscheme solarized

" GVIM
set guioptions-=m   " Remove menu bar
set guioptions-=T   " Remove toolbar
set guioptions-=r   " Remove right-hand scroll bar
set guioptions-=l   " Remove left-hand scroll bar
set guioptions+=LlRrb
set guioptions-=LlRrb
set mouse=a
set guifont=DejaVu\ Sans\ Mono\ 9
set number

" Easygrep
let g:EasyGrepCommand=1

" Supertab
" http://joncairns.com/2012/05/using-vim-as-a-php-ide/
" let g:SuperTabDefaultCompletionType = ""
" http://vim.wikia.com/wiki/Omni_completion_popup_menu
let g:SuperTabDefaultCompletionType = "<C-X><C-O>"

" Latex
"set grepprg=grp\ -nH\ $*
"let g:tex_flavor = "latex"
let g:LatexBox_latexmk_preview_continuously = 1
let g:LatexBox_latexmk_async = 1

" Syntastic
let g:syntastic_javascript_checkers = ['jshint', 'jscs']
let g:syntastic_aggregate_errors = 1
let g:syntastic_python_checkers = ['pep8', 'pylint']
let g:syntastic_python_pep8_args='--ignore=E272,E221,E241,E251,E402'
let g:syntastic_haml_checkers = ['haml_lint']
let g:syntastic_php_checkers = ['']
" Always set erros to be jumpable with :lnext resp. :lprev
let g:syntastic_always_populate_loc_list = 1
" Set to C++11
let g:syntastic_cpp_compiler = 'clang++'
let g:syntastic_cpp_compiler_options = ' -std=c++11 -stdlib=libc++'

"" Commands
command Q windo if &buftype == "quickfix" || &buftype == "locationlist" | lclose | endif
command PythonBreak execute 'normal $oi' | set paste | execute 'normal amport ipdb; ipdb.set_trace()' | set nopaste

"" Key mappings
" Jump to next error
noremap <F8> :lnext<CR>
" Jump to previous error
noremap <S-F8> :lprev<CR>

" Toggle file  with F2
noremap <F2> :NERDTreeToggle<CR>

" Python breakpoint
noremap <C-b> :PythonBreak<CR>

" Move tabs with alt + left|right
nnoremap <silent> <A-Left> :execute 'silent! tabmove ' . (tabpagenr()-2)<CR>
nnoremap <silent> <A-Right> :execute 'silent! tabmove ' . tabpagenr()<CR>

" Automagically execute octave and matlab files when pressing F5
autocmd FileType octave map <buffer> <F5> ggOpkg load all<esc>Gopause<esc>:w<cr>:!octave -qf %<cr>ddggdd:w<cr>
autocmd FileType matlab map <buffer> <F5> ggOpkg load all<esc>Gopause<esc>:w<cr>:!octave -qf %<cr>ddggdd:w<cr>
